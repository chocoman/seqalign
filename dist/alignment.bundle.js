!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Begin=0]="Begin",t[t.Insert=1]="Insert",t[t.Substitute=2]="Substitute",t[t.Match=3]="Match",t[t.Delete=4]="Delete"}(r||(r={}));e.Alignment=class{constructor(t,e,n,r){this.a=t,this.distance=e,this.insertionPenalty=n,this.deletionPenalty=r}countOperations(t){const e=[0,0,0,0,0];for(let n=0;n<t.length;n++)e[t[n]]++;return e}match(t,e,n){const i=[],o=[];this.b=t;const l=this.a.slice(e,n);for(let e=0;e<=t.length;e++)i[e]=[],o[e]=[];i[0][0]=0;for(let t=1;t<=l.length;t++)i[0][t]=i[0][t-1]+this.insertionPenalty(l[t-1]),o[0][t]=r.Begin;for(let t=1;t<=this.b.length;t++)i[t][0]=i[t-1][0]+this.deletionPenalty(this.b[t-1]),o[t][0]=r.Delete;for(let e=1;e<=t.length;e++)for(let n=1;n<=l.length;n++){const a=this.distance(t[e-1],l[n-1]);var s=i[e-1][n-1]+a,u=i[e][n-1]+this.insertionPenalty(l[n-1]),c=i[e-1][n]+this.deletionPenalty(this.b[e-1]);s<u&&s<c?(i[e][n]=s,o[e][n]=0===a?r.Match:r.Substitute):u<c?(i[e][n]=u,o[e][n]=r.Insert):(i[e][n]=c,o[e][n]=r.Delete)}let a=this.b.length,f=l.length,h=o[a][f];const b=new Array(this.b.length).fill(0);let d=[];for(var g=0;;g++){if(console.log([a,f]),a<=0||f<=0){console.log("sumting vird :-S");break}if(h===r.Begin)break;h===r.Substitute?(a-=1,f-=1):h===r.Delete?(a-=1,f=f):h===r.Insert?(a=a,f-=1):h===r.Match&&(a-=1,f-=1),h=o[a][f],d.push(h),b[a]=e+f}const p=this.countOperations(d);return console.log(p),{distance:i[this.b.length][l.length],matchIndices:b}}}}]);
//# sourceMappingURL=alignment.bundle.js.map